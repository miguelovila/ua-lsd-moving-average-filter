library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.NUMERIC_STD.all;


entity CleanTriangSignalRAM256x8 is
	port(WriteEnable : in std_logic;
		  Clock		  : in std_logic;
		  WriteData	  : in std_logic_vector(7 downto 0);
		  address	  : in std_logic_vector(7 downto 0);
		  DataOut	  : out std_logic_vector(7 downto 0));
		  
end CleanTriangSignalRAM256x8;
--

architecture Behavioral of CleanTriangSignalRAM256x8 is
	constant NUM_WORDS : integer := 256;
	subtype TDataType is std_logic_vector(7 downto 0);
	type TMemory is array (0 to NUM_WORDS-1) of TDataWords;
	signal s_memory: TMemory;
	
begin
	process(Clock)
	begin
		if (rising_edge(Clock)) then
			if (WriteEnable = '1') then
				s_memory(to_integer(unsigned(address))) <= WriteData;
			end if;
		end if;
	end process;
	DataOut <= s_memory(to_integer(unsigned(address)));
end Behavioral;